project Tables is
   type Development_Type is ("Debug", "Release", "Profile");
   Development : Development_Type := external ("Development", "Debug");

   type Arch_Type is ("x86_64", "i686", "armhf", "aarch64", "auto");
   Arch : Arch_Type := external ("arch", "x86_64");

   type Object_Dir_Scheme_Type is (".", "nested");
   Object_Dir_Scheme : Object_Dir_Scheme_Type := external ("Object_Dir", ".");

   for Source_Files use
       (  "tables-names.adb",
          "tables-names.ads",
          "tables.adb",
          "tables.ads");

   Target_Triplet := Project'Target;

   case Arch is
      when "auto" =>
         case Target_Triplet is
            when "aarch64-linux-gnu" =>
               Arch := "aarch64";
            when "arm-linux"           |
                 "arm-linux-gnueabi"   |
                 "arm-linux-gnueabihf" =>
               Arch := "armhf";
            when "x86_64-apple-darwin" |
                 "x86_64-darwin"       |
                 "x86_64-freebsd"      |
                 "x86_64-linux"        |
                 "x86_64-linux-gnu"    |
                 "x86_64-pc-cygwin"    |
                 "x86_64-redhat-linux" |
                 "x86_64-suse-linux"   |
                 "x86_64-w64-mingw32"  |
                 "x86_64-windows"      |
                 "x86-darwin"          |
                 "x86-linux"           |
                 "x86-suse-linux"      |
                 "x86-windows"         =>
               Arch := "x86_64";
            when "i686-freebsd"        |
                 "i686-linux-gnu"      |
                 "i686-pc-cygwin"      |
                 "i686-pc-mingw32"     |
                 "i686-redhat-linux"   |
                 "i686-suse-linux"     |
                 "i686-w64-mingw32"    =>
               Arch := "i686";
            when "" =>
               for Source_Files use
                   (  "target is undefined, "
                   &  "scenario auto cannot be used"
                   );
            when others =>
               for Source_Files use
                   (  "target "
                   &  Target_Triplet
                   &  " is unknown, scenario auto cannot be used"
                   );
         end case;
      when others =>
         null;
   end case;


   for Source_Dirs use (".");

   Object_Dir_Path := "";
   case Object_Dir_Scheme is
      when "." =>
         Object_Dir_Path := ".";
      when "nested" =>
         Object_Dir_Path := "obj/osx/" & arch & "/" & Development;
   end case;
   for Object_Dir use Object_Dir_Path;

   GNAT_XX := "";

   package Compiler is
      case Development is
         when "Debug" =>
            for Default_Switches ("ada") use
                (  "-gnatwcikmoprvz.c.p.t.w.x",
                   "-gnato",
                   "-gnatVaep",
                   "-gnatf",
                   "-gnatU",
                   "-g",
                   "-fstack-check",
                   "-Wall"
                )  & GNAT_XX;
         when "Release" =>
            for Default_Switches ("ada") use
                (  "-gnatwcikmoprvz.c.p.t.w.x",
                   "-gnatp",
                   "-gnatVaep",
                   "-gnatf",
                   "-gnatU",
                   "-O2",
                   "-gnatn"
                )  & GNAT_XX;
         when "Profile" =>
            for Default_Switches ("ada") use
                (  "-g",
                   "-pg"
                )  & GNAT_XX;
      end case;
   end Compiler;

   package Binder is
      case Development is
         when "Debug" =>
            for Default_Switches ("ada") use ("-Es");
         when "Release" =>
            for Default_Switches ("ada") use ();
         when others =>
            null;
      end case;
   end Binder;

   package Builder is
      case Development is
         when "Debug" =>
            for Default_Switches ("ada") use ("-g");
         when "Release" =>
            for Default_Switches ("ada") use ("-s");
         when others =>
            null;
      end case;
   end Builder;

   package Linker is
      case Development is
         when "Debug" =>
            for Default_Switches ("ada") use ("-g");
         when "Release" =>
            for Default_Switches ("ada") use ("-O2", "-s");
         when "Profile" =>
            for Default_Switches ("ada") use ("-g", "-pg");
      end case;

      for Default_Switches ("Ada")
      	use Linker'Default_Switches ("Ada") & ("-Wl,-no_pie");
   end Linker;

end Tables;
